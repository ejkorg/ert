-- Create script for H2 DB
create table ERT_CONF
(
    ID IDENTITY(2) PRIMARY KEY,
    CONF_NAME VARCHAR2(128),
    VALUE_STRING VARCHAR2(500),
    VALUE_NUMBER NUMBER(38),
    VALUE_BOOLEAN VARCHAR2(1) DEFAULT 'N',
    DATA_TYPE VARCHAR2(32)
);

create unique index IDX__ERT_CONF__CONF_NAME on ERT_CONF (
    CONF_NAME
);

create table ON_LOT
(
    ID IDENTITY(2) PRIMARY KEY,
    LOT VARCHAR2(32) not null,
    PARENT_LOT VARCHAR2(32),
    PRODUCT VARCHAR2(128),
    LOT_OWNER VARCHAR2(32),
    PARENT_PRODUCT VARCHAR2(32),
    SOURCE_LOT VARCHAR2(32),
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP,
    ALTERNATE_PRODUCT VARCHAR2(128),
    FAB VARCHAR2(64),
    LOT_TYPE VARCHAR2(32),
    LOT_CLASS VARCHAR2(32),
    ALTERNATE_LOT VARCHAR2(32),
    SUBCON_LOT VARCHAR2(32),
    SUBCON_PRODUCT VARCHAR2(128),
    PRODUCT_CODE VARCHAR2(128),
    MFG_LOT VARCHAR2(32),
    STATUS VARCHAR(32)
);

create unique index IDX__ON_LOT__LOT on ON_LOT (
    LOT
);

create table ON_PROD
(
    ID IDENTITY(2) PRIMARY KEY,
    PRODUCT VARCHAR2(128) not null,
    PRODUCT_VERSION VARCHAR2(128),
    ITEM_TYPE VARCHAR2(15),
    FAB VARCHAR2(64),
    FAB_DESC VARCHAR2(128),
    AFM VARCHAR2(45),
    PROCESS VARCHAR2(128),
    FAMILY VARCHAR2(32),
    PACKAGE VARCHAR2(32),
    GDPW NUMBER(38),
    WF_UNITS VARCHAR2(32),
    WF_SIZE FLOAT,
    DIE_UNITS VARCHAR2(32),
    DIE_WIDTH FLOAT,
    DIE_HEIGHT FLOAT,
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP,
    PTI4 VARCHAR2(32),
    TECHNOLOGY VARCHAR2(128),
    MASKSET VARCHAR2(32),
    STATUS VARCHAR(32)
);

create unique index IDX__ON_PROD__PRODUCT on ON_PROD (
    PRODUCT
);

create table ON_SCRIBE
(
    ID IDENTITY(521) PRIMARY KEY,
    SCRIBEID VARCHAR2(32) not null,
    WAFERID_SOURCE VARCHAR2(16),
    SCRIBEID_SOURCE VARCHAR2(16),
    WAFER_NUM NUMBER,
    LOT VARCHAR2(32),
    FAB VARCHAR2(64),
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP,
    WAFERID VARCHAR2(32) not null,
    STATUS VARCHAR(32)
);

create unique index IDX__ON_SCRIBE__SCRIBEID on ON_SCRIBE (
    SCRIBEID
);

create unique index IDX__ON_SCRIBE__LOT__WAFER_NUM on ON_SCRIBE (
    LOT, WAFER_NUM
);

create table ON_WMAP
(
    ID IDENTITY(2) PRIMARY KEY,
    PRODUCT VARCHAR2(128) not null,
    WF_UNITS VARCHAR2(32),
    WF_SIZE FLOAT,
    FLAT_TYPE VARCHAR2(32),
    FLAT CHAR,
    DIE_WIDTH FLOAT,
    DIE_HEIGHT FLOAT,
    CENTER_X FLOAT,
    CENTER_Y FLOAT,
    POSITIVE_X CHAR,
    POSITIVE_Y CHAR,
    RETICLE_ROWS NUMBER(38),
    RETICLE_COLS NUMBER(38),
    RETICLE_ROW_OFFSET NUMBER(38),
    RETICLE_COL_OFFSET NUMBER(38),
    CONFIRMED CHAR,
    DEVICE_COUNT NUMBER(38),
    CONFIRM_TIME DATE,
    COMMENTS VARCHAR2(500),
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP,
    INPUT_FILE VARCHAR2(500),
    CFG_ID NUMBER,
    LOCATION NVARCHAR2(128),
    REF_DIE_X NUMBER,
    REF_DIE_Y NUMBER,
    REF_DIE_INIT_DT DATE,
    WMC_DEVICE VARCHAR2(128) not null,
    STATUS VARCHAR(32)
);

create unique index IDX__ON_WMAP__PRODUCT on ON_WMAP (
    PRODUCT
);

create table ON_FAB_CONF
(
    ID IDENTITY(2) PRIMARY KEY,
    FOUNDRY_FAB VARCHAR2(32) not null,
    DATA_TYPE VARCHAR(32) not null,
    LTM_URL VARCHAR2(500),
    WMC_URL VARCHAR2(500),
    VID2SCRIBE_URL VARCHAR2(500),
    SCRIBE2VID_URL VARCHAR2(500),
    SCRIBE_RESULT_TYPE VARCHAR2(32),
    ONSCRIBE_WAFERID_EQUALS_SCRIBEID VARCHAR2(1) default 'N' not null,
    LOTID_FOR_ONSCRIBE VARCHAR2(32),
    WAFERID_CREATION_PATTERN VARCHAR2(100),
    SOURCELOT_ADJUSTMENT_PATTERN VARCHAR2(100),
    SECOND_LOTG_QUERY VARCHAR2(1) default 'N' not null,
    MATCHUP_URL VARCHAR2(500),
    LOTID_FOR_LOTG VARCHAR2(32),
    LOTID_FOR_LTM VARCHAR2(32)
);

create index IDX__ON_FAB_CONF__FOUNDRY_FAB on ON_FAB_CONF (
    FOUNDRY_FAB
);

create unique index IDX__ON_FAB_CONF__FOUNDRY_FAB__DATA_TYPE on ON_FAB_CONF (
    FOUNDRY_FAB, DATA_TYPE
);

create table ON_SITE_CONF
(
    ID IDENTITY(2) PRIMARY KEY,
    SITE VARCHAR2(32) not null,
    MES_TYPE VARCHAR2(32),
    LOT_TRIM_RULE VARCHAR2(255),
    DRIVER_CLASS_NAME VARCHAR2(200),
    CONNECTION_STRING VARCHAR(1000),
    DB_USERNAME VARCHAR(100),
    DB_PASSWORD VARCHAR2(100),
    SQL_LTM_PRODUCT_REPLACEMENT VARCHAR2(2000)
);

create index IDX__ON_SITE_CONF__SITE on ON_SITE_CONF (
    SITE
);

CREATE TABLE ON_SLICE
(
    ID IDENTITY(2) PRIMARY KEY,
    SLICE VARCHAR2(32),
    PUCK_ID VARCHAR2(32),
    RUN_ID VARCHAR2(32),
    SLICE_SOURCE_LOT VARCHAR2(32),
    START_LOT VARCHAR2(32),
    FAB_WAFER_ID VARCHAR2(32),
    GLOBAL_WAFER_ID VARCHAR2(32),
    FAB_SOURCE_LOT VARCHAR2(32),
    SLICE_START_TIME DATE,
    SLICE_PARTNAME VARCHAR2(32),
    SLICE_LOTTYPE VARCHAR2(8),
    SLICE_SUPPLIERID VARCHAR2(32),
    PUCK_HEIGHT NUMBER(38),
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP
);

create unique index IDX__ON_SLICE__SLICE on ON_SLICE (
    SLICE
);

create table PP_LOT
(
    ID IDENTITY(2) PRIMARY KEY,
    LOT VARCHAR2(32) not null,
    PARENT_LOT VARCHAR2(32),
    PRODUCT VARCHAR2(128),
    LOT_OWNER VARCHAR2(32),
    PARENT_PRODUCT VARCHAR2(32),
    SOURCE_LOT VARCHAR2(32),
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP
);

create unique index IDX__PP_LOT__LOT on PP_LOT (
    LOT
);

create table PP_PROD
(
    ID IDENTITY(2) PRIMARY KEY,
    PRODUCT VARCHAR2(128) not null,
    ITEM_TYPE VARCHAR2(15),
    FAB VARCHAR2(64),
    FAB_DESC VARCHAR2(128),
    AFM VARCHAR2(45),
    PROCESS VARCHAR2(128),
    FAMILY VARCHAR2(32),
    PACKAGE VARCHAR2(32),
    GDPW NUMBER(38),
    WF_UNITS VARCHAR2(32),
    WF_SIZE FLOAT,
    DIE_UNITS VARCHAR2(32),
    DIE_WIDTH FLOAT,
    DIE_HEIGHT FLOAT,
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP
);

create table TEST_PROGRAM_VER_REFERENCE
(
    ID IDENTITY(2) PRIMARY KEY,
    PROGRAM_NAME VARCHAR2(32) not null,
    PARAMETERS_HASH VARCHAR2(64) not null,
    PROGRAM_VERSION NUMBER(38) not null,
    INSERT_TIME TIMESTAMP default CURRENT_TIMESTAMP
);


create unique index IDX__PP_PROD__PRODUCT on PP_PROD (
    PRODUCT
);
