flowchart TD
    Client[(API Consumer)] --> Controller[OnLotController GET /api/onlot/bylotid]
    Controller --> Normalize[Normalize inputs StringUtils upperCase]
    Normalize --> Service[OnLotService.findByLotId]
    Service --> RepoOnLot[OnLotRepository.findByLot]
    RepoOnLot -- Found --> Map[Map entity to OnLotDto; set Status FOUND]
    Map --> ControllerResponse[Controller builds ResponseEntity]

    ControllerResponse --> ClientResponse[(HTTP 200 + JSON DTO)]

    RepoOnLot -- Not Found --> Config[Load configs: OnFabConf, ErtConf, OnSiteConf]
    Config --> Lotg[LotgInfoService.getLotGInfo]
    Config --> Ltm[Caller.getLtm]
    Config --> Mes[TorrentService and GenesisService]
    Config --> Dw[DataWarehouseService queries]
    Config --> SiteRules[OnSiteConfRepository rules]

    Lotg --> Aggregate[Caller.mergeLotData]
    Ltm --> Aggregate
    Mes --> Aggregate
    Dw --> Aggregate
    SiteRules --> Aggregate

    Aggregate --> Persist[Persist updates: OnLotRepository.save; OnProdRepository.save]
    Persist --> Map
    Map --> ControllerResponse